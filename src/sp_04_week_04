                                               –ó–∞–¥–∞—á–∞ ‚Ññ1
 –í–æ–ø—Ä–æ—Å:

 –ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å —Å–∏–º–≤–æ–ª—ã –≤ input. –ü–æ—Å–ª–µ –≤–≤–æ–¥–∞ –ø–µ—Ä–≤–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ –∫–Ω–æ–ø–∫–∞ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å" —Ä–∞–∑–¥–∏–∑–∞–±–ª–∏—Ç—Å—è.

 –ó–∞–¥–∞—á–∞: –∫–Ω–æ–ø–∫–∞ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å" –¥–æ–ª–∂–Ω–∞ —Ä–∞–∑–¥–∏–∑–∞–±–ª–∏—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –¥–ª–∏–Ω–Ω–∞ –∏–º–µ–Ω–∏ –±–æ–ª—å—à–µ, –ª–∏–±–æ —Ä–∞–≤–Ω–∞ 5 —Å–∏–º–≤–æ–ª–∞–º.
 ‚ùó–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –≤—ã–≤–æ–¥–∏—Ç—å –≤ —Ä–∞–∑–º–µ—Ç–∫–µ –Ω–µ –Ω—É–∂–Ω–æ.

 ‚ùó–ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ message –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–∫–∏, —Ç–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ç–µ–∫—Å—Ç–∞ –æ—à–∏–±–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ 'Error'

 ‚ùó–°—Ç–æ—Ä–æ–Ω–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä zod, yup) –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ

 –í –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ç–µ–≥ –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –∏–∑–º–µ–Ω—è–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è

 üñ• –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: <input {...register("name", {disabled })} />



 import { createRoot } from "react-dom/client"
 import { SubmitHandler, useForm } from "react-hook-form"
 type Inputs = {
   name: string
 }
 export const Login = () => {
   const {
     register,
     handleSubmit,
     formState: { isValid, isDirty },
   } = useForm<Inputs>({
     defaultValues: { name: "" },
   })
   const onSubmit: SubmitHandler<Inputs> = (data) => {
     const minLength = 5
     if (data.name.length < minLength) {
       alert(`‚ùå FirstName must be at least ${minLength} characters long`)
     } else {
       alert(JSON.stringify(data, null, 2))
     }
   }
   return (
     <form onSubmit={handleSubmit(onSubmit)}>
       <div>
         <input {...register("name")} />
       </div>
       <button type="submit" disabled={!(isValid && isDirty)}>
         –û—Ç–ø—Ä–∞–≤–∏—Ç—å
       </button>
     </form>
   )
 }
 createRoot(document.getElementById("root")!).render(<Login />)

 –í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:
 1)<button type="submit" disabled={!(isDirty && watch("name").length >= 5)}>
    –ù–æ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ watch, —á—Ç–æ–±—ã –æ–Ω —Å–ª–µ–¥–∏–ª –∑–∞ –∏–Ω–ø—É—Ç–æ–º
 2) <input {...register("name", { required: true, minLength: 5 })} />
     –¢—É—Ç –±–æ–ª—å—à–µ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–≥–∏—á–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ




                                               –ó–∞–¥–∞—á–∞ ‚Ññ2

–í–æ–ø—Ä–æ—Å:

üìú –û–ø–∏—Å–∞–Ω–∏–µ:

–§–æ—Ä–º–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∂–∞–ª—É—é—Ç—Å—è –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ "–¢–µ–ª–µ—Ñ–æ–Ω–∞"

–ù–∞–π–¥–∏—Ç–µ –≤ –∫–æ–¥–µ –æ—à–∏–±–∫—É. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –≤—Å–µ–π —Å—Ç—Ä–æ–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞.



import { createRoot } from "react-dom/client"
import { SubmitHandler, useForm } from "react-hook-form"
type Inputs = {
  firstName: string
  lastName: string
  email: string
  password: string
  phone: string
}
const Login = () => {
  const { register, handleSubmit } = useForm<Inputs>({
    defaultValues: {
      firstName: "",
      lastName: "",
      email: "",
      password: "",
      phone: "",
    },
  })
  const onSubmit: SubmitHandler<Inputs> = (data) => {
    alert(JSON.stringify(data, null, 2))
  }
  return (
    <form onSubmit={handleSubmit(onSubmit)}>
      <div>
        <input {...register("firstName")} placeholder={"–í–≤–µ–¥–∏—Ç–µ –∏–º—è"} />
      </div>
      <div>
        <input {...register("lastName")} placeholder={"–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é"} />
      </div>
      <div>
        <input {...register("email")} placeholder={"–í–≤–µ–¥–∏—Ç–µ email"} type="email" />
      </div>
      <div>
        <input {...register("password")} placeholder={"–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"} type="password" />
      </div>
      <div>
        <input {...register("password")} placeholder={"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"} />
      </div>
      <button>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
    </form>
  )
}
createRoot(document.getElementById("root")!).render(<Login />)

–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: <input {...register("phone")} placeholder={"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"} />



                                               –ó–∞–¥–∞—á–∞ ‚Ññ3
–í–æ–ø—Ä–æ—Å:

üìú –û–ø–∏—Å–∞–Ω–∏–µ:

–ü—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã –∏ –∏—Ö –æ—Ç–ø—Ä–∞–≤–∫–µ –≤—ã –¥–æ–ª–∂–Ω—ã —É–≤–∏–¥–µ—Ç—å alert c

–≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏, –Ω–æ –∏–∑-–∑–∞ –¥–æ–ø—É—â–µ–Ω–Ω–æ–π –æ—à–∏–±–∫–∏ —Ñ–æ—Ä–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.

–ù–∞–π–¥–∏—Ç–µ –æ—à–∏–±–∫—É –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —Å—Ç—Ä–æ–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞.

‚ùó–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ø–æ–∫–∞–∑–∞–ª—Å—è alert —Ñ–æ—Ä–º–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å –≤—Å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ



import { createRoot } from "react-dom/client"
import { SubmitHandler, useForm } from "react-hook-form"
type Inputs = {
  email: string
  password: string
}
const Login = () => {
  const { register, handleSubmit } = useForm<Inputs>({
    defaultValues: { email: "", password: "" },
  })
  const onSubmit: SubmitHandler<Inputs> = (data) => {
    alert(JSON.stringify(data, null, 2))
  }
  return (
    <form onSubmit={handleSubmit(onSubmit)}>
      <input {...register("email")} placeholder={"–í–≤–µ–¥–∏—Ç–µ email"} type="email" />
      <input {...register("password")} placeholder={"–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"} type="password" />
      <button type="button">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
    </form>
  )
}
createRoot(document.getElementById("root")!).render(<Login />)

–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>




                                               –ó–∞–¥–∞—á–∞ ‚Ññ4
–í–æ–ø—Ä–æ—Å:

–ë–µ–ª—ã–π —ç–∫—Ä–∞–Ω... –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.

–ö–∞–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–µ–ª–∞—Ç—å –≤ —Å—Ç—Ä–æ–∫–µ

createRoot(document.getElementById("root")!).render(<App />)

—á—Ç–æ–±—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–æ –∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ –æ—Ç–æ–±—Ä–∞–∑–∏–ª–æ—Å—å 2 –∑–∞–≥–æ–ª–æ–≤–∫–∞

–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —Å—Ç—Ä–æ–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞.
üí°–û—Ç–≤–µ—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫

–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:

createRoot(document.getElementById("root")!).render(<App />)



import { createRoot } from "react-dom/client"
import { Route, Routes } from "react-router"
export const Main = () => {
  return (
    <>
      <h2>‚úÖ –°–ø–∏—Å–æ–∫ —Ç—É–¥—É–ª–∏—Å—Ç–æ–≤</h2>
      <h2>üìú –°–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ–≤</h2>
    </>
  )
}
// App
export const App = () => {
  return (
    <Routes>
      <Route path={"/"} element={<Main />} />
    </Routes>
  )
}
createRoot(document.getElementById("root")!).render(<App />)

–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: createRoot(document.getElementById("root")!).render(
                    <BrowserRouter>
                      <App />
                    </BrowserRouter>,
                  )

        App (–≤—Å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ) –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ–±–µ—Ä–Ω—É—Ç–æ–≤ –≤ BrowserRouter






                                               –ó–∞–¥–∞—á–∞ ‚Ññ5
–í–æ–ø—Ä–æ—Å:

–ò—Å–ø—Ä–∞–≤—å—Ç–µ –∫–æ–¥ –Ω–∞ —Å—Ç—Ä–æ–∫–µ —Å –ø–æ–º–µ—Ç–∫–æ–π ‚ùóFIX —Ç–∞–∫, —á—Ç–æ–±—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ—Ç–æ–±—Ä–∞–∑–∏–ª—Å—è —Ç–æ–∫–µ–Ω.

‚ùó–û—Ç–≤–µ—Ç –º–æ–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —Å —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π –∏ –±–µ–∑. –£—á—Ç–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤

üñ• –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: const token = 'JIUzI1NiIsInR5cCI6IkpXVCJ9'



import { useEffect } from "react"
import { createRoot } from "react-dom/client"
import { BrowserRouter, Route, Routes, useNavigate } from "react-router"
const Login = () => {
  const navigate = useNavigate()
  useEffect(() => {
    navigate("/secret/JIUzI1NiIsInR5cCI6IkpXVCJ9")
  }, [])
  return <div>Login</div>
}
const SecretToken = () => {
  const token = "no token" // ‚ùó FIX
  return <h1>ü¶æ token: {token}</h1>
}
createRoot(document.getElementById("root")!).render(
  <BrowserRouter>
    <Routes>
      <Route path={"/"} element={<Login />} />
      <Route path={"/secret/:token"} element={<SecretToken />} />
    </Routes>
  </BrowserRouter>,
)


–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç (—Å —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π)? const { token } = useParams<{ token: string }>()






                                               –ó–∞–¥–∞—á–∞ ‚Ññ6
–í–æ–ø—Ä–æ—Å:

üìú –û–ø–∏—Å–∞–Ω–∏–µ:

–í –º–µ–Ω—é 3 —Ä–∞–±–æ—á–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏. –ù–æ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –∞–∫—Ç–∏–≤–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–µ –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç—Å—è.

–≠—Ç–æ –ø–ª–æ—Ö–æ–µ UI/UX –ø–æ–≤–µ–¥–µ–Ω–∏–µ

ü™õ –ó–∞–¥–∞—á–∞:

–ß—Ç–æ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –∞—Ç—Ä–∏–±—É—Ç–µ style –¥–ª—è NavLink, —á—Ç–æ–±—ã –∫ –∞–∫—Ç–∏–≤–Ω–æ–π —Å—Å—ã–ª–∫–µ –ø—Ä–∏–º–µ–Ω—è–ª—Å—è —Å—Ç–∏–ª—å activeLink,

–∞ –∫ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ–π, —Å—Ç–∏–ª—å link

‚ùó –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ –≤ –¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–µ –Ω–µ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å

–í –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –∫–æ–¥ –≤ –∞—Ç—Ä–∏–±—É—Ç style —Å –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–º –∫–æ–¥–æ–º

üñ• –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: style={link || activeLink}



import { CSSProperties } from "react"
import { createRoot } from "react-dom/client"
import { BrowserRouter, NavLink, Route, Routes } from "react-router"
const footer: CSSProperties = {
  padding: 10,
  background: "lightslategrey",
}
const link: CSSProperties = {
  color: "lightsalmon",
  fontSize: 20,
}
const activeLink: CSSProperties = {
  fontWeight: "bold",
  color: "red",
  fontSize: 20,
}
const Dragons = () => {
  return <h1>üê≤ üê≤ üê≤</h1>
}
const Cats = () => {
  return <h1>üò∫ üê± üòº</h1>
}
const Dogs = () => {
  return <h1>üê∂ üê∂ üê∂</h1>
}
const Menu = () => {
  return (
    <ul>
      <li>
        <NavLink to={Path.Dragons} style={link}>
          dragons
        </NavLink>
      </li>
      <li>
        <NavLink to={Path.Cats} style={link}>
          cats
        </NavLink>
      </li>
      <li>
        <NavLink to={Path.Dogs} style={link}>
          dogs
        </NavLink>
      </li>
    </ul>
  )
}
// Routing
const Path = {
  Dragons: "dragons",
  Cats: "cats",
  Dogs: "dogs",
} as const
const Routing = () => {
  return (
    <Routes>
      <Route path={Path.Dragons} element={<Dragons />} />
      <Route path={Path.Cats} element={<Cats />} />
      <Route path={Path.Dogs} element={<Dogs />} />
    </Routes>
  )
}
export const App = () => {
  return (
    <>
      <Menu />
      <Routing />
      <footer style={footer}>
        <h2>Footer</h2>
      </footer>
    </>
  )
}
createRoot(document.getElementById("root")!).render(
  <BrowserRouter>
    <App />
  </BrowserRouter>,
)

–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: style={({ isActive }) => (isActive ? activeLink : link)}





                                               –ó–∞–¥–∞—á–∞ ‚Ññ7

–í–æ–ø—Ä–æ—Å:

üìú –û–ø–∏—Å–∞–Ω–∏–µ:

–ó–∞–≥—Ä—É–∑–∏–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—ã —É–≤–∏–¥–∏—Ç–µ –æ—à–∏–±–∫—É –ø–æ–¥ –ø–æ–ª–µ–º email, –Ω–æ –≤—ã –µ—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏.

–ò—Å–ø—Ä–∞–≤—å—Ç–µ —Å—Ç—Ä–æ–∫—É –∫–æ–¥–∞ –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–µ–µ —É—Å–ª–æ–≤–∏—è–º:

1) –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ email –≤–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.

2) –í–º–µ—Å—Ç–æ ERROR –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –ø—Ä–æ–ø–∏—Å–∞–Ω–Ω—ã–π –≤ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫ —ç—Ç–æ–º—É –ø–æ–ª—é.

–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —Å—Ç—Ä–æ–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞.

üñ• –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {<div style={error}>Incorrect email</div>}



import { CSSProperties } from "react"
import { createRoot } from "react-dom/client"
import { SubmitHandler, useForm } from "react-hook-form"
const error: CSSProperties = {
  color: "red",
  fontWeight: "bold",
}
type Inputs = {
  firstName: string
  email: string
}
const Login = () => {
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<Inputs>({
    defaultValues: { firstName: "", email: "" },
  })
  const onSubmit: SubmitHandler<Inputs> = (data) => {
    alert(JSON.stringify(data, null, 2))
  }
  return (
    <form onSubmit={handleSubmit(onSubmit)}>
      <div>
        <input {...register("firstName")} placeholder={"–í–≤–µ–¥–∏—Ç–µ –∏–º—è"} />
      </div>
      <div>
        <input
          {...register("email", {
            required: "Email is required",
            pattern: {
              value: /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/,
              message: "Incorrect email",
            },
          })}
          placeholder={"–í–≤–µ–¥–∏—Ç–µ email"}
        />
        {<div style={error}>ERROR</div>}
      </div>
      <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
    </form>
  )
}
createRoot(document.getElementById("root")!).render(<Login />)

–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:
1) {errors.email && <div style={error}>{errors.email.message}</div>}
2)  {<div style={error}>{errors.email?.message}</div>}
